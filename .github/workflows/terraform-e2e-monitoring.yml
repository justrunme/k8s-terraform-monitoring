name: Terraform Monitoring E2E

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Kind & Kubectl
        run: |
          curl -LO "https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64"
          chmod +x kind-linux-amd64
          sudo mv kind-linux-amd64 /usr/local/bin/kind
          curl -LO "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

      - name: Create Kind Cluster
        run: kind create cluster --wait 60s

      - name: Wait for Cluster DNS (CoreDNS)
        run: |
          kubectl rollout status deployment/coredns -n kube-system --timeout=90s

      - name: Prepare hostPath for PV (Kind)
        run: |
          docker exec kind-control-plane mkdir -p /tmp/demo-data
          docker exec kind-control-plane chmod 777 /tmp/demo-data

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -lock=false

      - name: Terraform Apply
        run: terraform apply -auto-approve

      # ------------------- SMOKE TESTS -------------------
      - name: Wait for Monitoring Namespace
        run: |
          for i in {1..20}; do kubectl get ns monitoring && break || sleep 4; done

      - name: Wait for Prometheus & Grafana Pods
        run: |
          kubectl rollout status deployment/kube-prometheus-stack-grafana -n monitoring --timeout=180s
          kubectl rollout status statefulset/kube-prometheus-stack-prometheus -n monitoring --timeout=180s

      - name: Wait for test-app Pod
        run: |
          kubectl rollout status deployment/test-app -n monitoring --timeout=120s

      - name: Port-forward Grafana & check login page
        run: |
          kubectl port-forward svc/kube-prometheus-stack-grafana 3000:80 -n monitoring &
          sleep 10
          curl -sf http://localhost:3000/login | grep "grafana" || (echo "No Grafana page" && exit 1)

      - name: Port-forward Prometheus & check status page
        run: |
          kubectl port-forward svc/kube-prometheus-stack-prometheus 9090:9090 -n monitoring &
          sleep 10
          curl -sf http://localhost:9090/ | grep "Prometheus" || (echo "No Prometheus page" && exit 1)

      - name: Port-forward test-app & check
        run: |
          kubectl port-forward svc/test-app 8000:80 -n monitoring &
          sleep 5
          curl -sf http://localhost:8000/ | grep "Welcome to nginx" || (echo "test-app not available" && exit 1)

      # --- Дополнительно: Проверка наличия ServiceMonitor ---
      - name: Check ServiceMonitor
        run: |
          kubectl get servicemonitor -n monitoring | grep test-app

      # --- Уборка ---
      - name: Terraform Destroy
        if: always()
        run: |
          terraform init -backend=false
          terraform destroy -auto-approve

      - name: Delete Kind Cluster
        if: always()
        run: kind delete cluster
